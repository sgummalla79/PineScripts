//@version=4
study("MCI", overlay=true, max_bars_back=900)

src = close
sma_type = 1
ema_type = 2
incompletecandles = input(true, title="Include current unclosed current candle")
invert = input(false, "Invert Scale")
bar = incompletecandles ? 0 : 1
forecast_src = src[bar]

//1. Simple Moving Average
//2. Exponential Moving Average
//3. Hull Moving Average
//4. Weighted Moving Average
//5. Voulme Weighted Moving Average

matype(_src, _len, _type, _res) =>
    symSrc = _res == "" ? security(syminfo.tickerid, timeframe.period, _src) : security(syminfo.tickerid, _res, _src)
    _len == 0 ? _src : (_type==1 ? sma(symSrc,_len) : _type==2 ? ema(symSrc,_len) : _type==3 ? wma(2*wma(symSrc, _len/2)-wma(symSrc, _len), round(sqrt(_len))) : _type==4 ? wma(symSrc, _len) : _type==5 ? vwma(symSrc, _len) : na)

//###################Simple Moving Average#####################

showMA = input(true, title="Show Moving Averages")

sma_1_len = input(100, title="1. Simple Moving Average", type=input.integer)
sma_2_len = input(200, title="2. Simple Moving Average", type=input.integer)

sma_1_col = color.purple
sma_2_col = color.green

sma_1 = showMA ? matype(forecast_src, sma_1_len, 1, "") : na
sma_2 = showMA ? matype(forecast_src, sma_2_len, 1, "") : na

plot(sma_1, color=sma_1_col, linewidth=1, title="1. Simple Moving Average")
plot(sma_2, color=sma_2_col, linewidth=1, title="2. Simple Moving Average")    

//###################Exponential Moving Average#####################

showEMA = input(true, title="Show Exponential Moving Averages")

ema_1_len = input(5, title="1. Exp. Moving Average", type=input.integer)
ema_2_len = input(8, title="2. Exp. Moving Average", type=input.integer)
ema_3_len = input(13, title="3. Exp. Moving Average", type=input.integer)
ema_4_len = input(21, title="4. Exp. Moving Average", type=input.integer)
ema_5_len = input(34, title="5. Exp. Moving Average", type=input.integer)
ema_6_len = input(55, title="6. Exp. Moving Average", type=input.integer)

ema_1_col = color.gray
ema_2_col = color.red
ema_3_col = color.orange
ema_4_col = color.white
ema_5_col = color.yellow
ema_6_col = color.blue

ema_1 = matype(forecast_src, ema_1_len, 2, "")
ema_2 = matype(forecast_src, ema_2_len, 2, "")
ema_3 = matype(forecast_src, ema_3_len, 2, "")
ema_4 = matype(forecast_src, ema_4_len, 2, "")
ema_5 = matype(forecast_src, ema_5_len, 2, "")
ema_6 = matype(forecast_src, ema_6_len, 2, "")

plot(showEMA ? ema_1 : na, color=ema_1_col, linewidth=1, title="1. Exp. Moving Average", display = display.none)
plot(showEMA ? ema_2 : na, color=ema_2_col, linewidth=1, title="2. Exp. Moving Average")
plot(showEMA ? ema_3 : na, color=ema_3_col, linewidth=1, title="3. Exp. Moving Average", display = display.none)
plot(showEMA ? ema_4 : na, color=ema_4_col, linewidth=1, title="4. Exp. Moving Average", display = display.none)
plot(showEMA ? ema_5 : na, color=ema_5_col, linewidth=1, title="5. Exp. Moving Average")
plot(showEMA ? ema_6 : na, color=ema_6_col, linewidth=1, title="6. Exp. Moving Average")

//###################EMA Strategy#####################

showEMAStrategy = input(false, title="Show Exponential Moving Averages Strategy")

ema_strategy_8 = matype(forecast_src, 8, 2, "")
ema_strategy_13 = matype(forecast_src, 13, 2, "")
ema_strategy_21 = matype(forecast_src, 21, 2, "")
ema_strategy_55 = matype(forecast_src, 55, 2, "")

buy_cond_ema = cross(ema_strategy_21, ema_strategy_55) and ema_strategy_8 > ema_strategy_13 and ema_strategy_21 > ema_strategy_55
sell_cond_ema = cross(ema_strategy_21, ema_strategy_55) and ema_strategy_8 < ema_strategy_13 and ema_strategy_21 < ema_strategy_55

plotshape(showEMAStrategy and buy_cond_ema ? 1 : 0,style=shape.triangleup,color=color.white,location=location.belowbar,transp=0, size=size.small, title="EMA Buy Strategy",editable=false)
plotshape(showEMAStrategy and sell_cond_ema ? -1 : 0,style=shape.triangledown,color=color.white,location=location.abovebar,transp=0, size=size.small, title="EMA Sell Strategy",editable=false)    

//################ Bollinger Bands ##################

showBB = input(false, title="Show Bollinger Bands")
bb_length = input(title="Bollinger Band Length", defval=20,type=input.integer)
bb_stdDev_factor = input(title="Standard Deviation", defval=2,type=input.integer)

bb_stdev = stdev(forecast_src, bb_length)
bb_basis = matype(forecast_src, bb_length, 1, "")
bb_upper = bb_basis + bb_stdDev_factor * bb_stdev
bb_lower = bb_basis - bb_stdDev_factor * bb_stdev

p1 = plot(showBB ? bb_upper : na, color=color.green, title="Upper Band", editable=false)
plot(showBB ? bb_basis : na , color=color.white, title="BB Moving Average", transp=0, editable=false)
p2 = plot(showBB ? bb_lower : na, color=color.green, title="Lower Band", editable=false)
fill(p1, p2, color=color.green, title="Background", transp=90)

//########################### Super Trend ########################################

showSuperTrend = input(false, title="Show Super Trend")
Factor=input(3, type=input.float)
Pd=input(7, minval=1,maxval = 100)

Up=hl2-(Factor*atr(Pd))
Dn=hl2+(Factor*atr(Pd))

up_trend_color = invert ? color.red : color.green
down_trend_color = invert ? color.green : color.red

TrendUp = float(na)
TrendUp := close[1]>TrendUp[1]? max(Up,TrendUp[1]) : Up

TrendDown = float(na)
TrendDown := close[1]<TrendDown[1]? min(Dn,TrendDown[1]) : Dn

Trend = float(na)
Trend := close > TrendDown[1] ? 1: close< TrendUp[1]? -1: nz(Trend[1],1)

Tsl = Trend==1? TrendUp: TrendDown

linecolor = Trend == 1 ? up_trend_color : down_trend_color

plot(showSuperTrend ? Tsl : na, color = linecolor , style = plot.style_line , linewidth = 2,title = "SuperTrend", editable=false)

//########################### TD Sequential ########################################
showTDSeq = input(false, "Show TD Sequential")
showSetup = input(true, "Show setup")
showCountdown = input(false, "Show countdown")
showPerfect = input(true, "Show perfect counts")
showOnlyCompletion = input(false, "Only show completions")
showTDST = input(true, "Show TDST Support and Resistance")
setupRecyclesOnNextBar = input(true, "Setup recycles on next bar")
flip = input(false, "Setup commences after TD Price Flip")
showRisk = input(false, "Show risk line")
volatilitySmoothing = input(false, "Volatility smoothing (relaxed setup)")

shortColour = invert ? color.red : color.green
longColour = invert ? color.green : color.red
smoothedColour = color.black

setupShort = int(na)
setupLong = int(na)
setupCount = int(na)
setupColour = color(na)
perfectSetup = bool(na)

setupShort := if close < close[4] and (not volatilitySmoothing or close < close[5])
    0
else
    if flip
        if nz(setupShort[1]) == 0 and close[1] < close[5] and close > close[4]
            1
        else
            if nz(setupShort[1]) == 0
                0
            else
                nz(setupShort[1] + 1)
    else
        if setupShort[1] == 9
            setupRecyclesOnNextBar ? 1 : 0
        else
            nz(setupShort[1] + 1)

setupLong := if close > close[4] and (not volatilitySmoothing or close > close[5])
    0
else
    if flip
        if nz(setupLong[1]) == 0 and close[1] > close[5] and close < close[4]
            1
        else
            if nz(setupLong[1]) == 0
                0
            else
                nz(setupLong[1] + 1)
    else
        if setupLong[1] == 9
            setupRecyclesOnNextBar ? 1 : 0
        else
            nz(setupLong[1] + 1)

setupCount := max(setupShort, setupLong)
setupColour := setupShort > 0 ? setupLong > 0 ? smoothedColour : shortColour : longColour

perfectSetup := showPerfect and (setupShort == 8 and high >= high[1] and high >= high[2] or 
   setupShort == 9 and high >= high[2] and high >= high[3] or 
   setupLong == 8 and low <= low[1] and low <= low[2] or 
   setupLong == 9 and low <= low[2] and low <= low[3])

plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 1, title="Setup 1", char="1", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 2, title="Setup 2", char="2", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 3, title="Setup 3", char="3", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 4, title="Setup 4", char="4", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 5, title="Setup 5", char="5", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 6, title="Setup 6", char="6", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and showSetup and (not showOnlyCompletion or barstate.islast) and setupCount == 7, title="Setup 7", char="7", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and not perfectSetup and (not showOnlyCompletion or barstate.islast) and showSetup and setupCount == 8, title="Setup 8", char="8", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and not perfectSetup and showSetup and setupCount == 9, title="Setup 9", char="9", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)

plotchar(showTDSeq and perfectSetup and showSetup and setupCount == 8, title="Perfect setup 8", char="âž‘", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)
plotchar(showTDSeq and perfectSetup and showSetup and setupCount == 9, title="Perfect setup 9", char="âž’", color=setupColour, transp=0, editable=false, location=invert ? location.belowbar : location.abovebar)


cdownShort = int(na)
cdownLong = int(na)
cdownColour = color(na)
cdownCount = int(na)
perfect8 = float(na)
perfectCountdown = bool(na)
lastCompletedSetup = int(na)
setupHigh = float(na)
setupLow = float(na)
cancelCountdown = bool(na)
recycleCountdown = bool(na)
LONG = -1
SHORT = 1
CANCELLED = 0

recycleCountdown := if setupShort == 9 and lastCompletedSetup[1] == SHORT or setupLong == 9 and lastCompletedSetup[1] == LONG
    highest(9) - lowest(9) >= setupHigh[1] - setupLow[1] and 
       (setupHigh[1] - setupLow[1]) * 1.618 > highest(9) - lowest(9)

highest_1 = highest(9)
setupHigh := recycleCountdown or setupShort == 9 and lastCompletedSetup[1] != SHORT or 
   setupLong == 9 and lastCompletedSetup[1] != LONG ? highest_1 : setupHigh[1]
lowest_1 = lowest(9)
setupLow := recycleCountdown or setupShort == 9 and lastCompletedSetup[1] != SHORT or 
   setupLong == 9 and lastCompletedSetup[1] != LONG ? lowest_1 : setupLow[1]

cancelCountdown := lastCompletedSetup[1] == SHORT and high < setupLow or 
   lastCompletedSetup[1] == LONG and low > setupHigh or recycleCountdown

lastCompletedSetup := setupLong == 9 ? LONG : 
   setupShort == 9 ? SHORT : cdownShort[1] == 13 and setupShort[1] != 9 or 
   cdownLong[1] == 13 and setupLong[1] != 9 or cancelCountdown ? CANCELLED : 
   lastCompletedSetup[1]

cdownShort := lastCompletedSetup != SHORT or cancelCountdown ? 0 : 
   close >= high[2] ? nz(cdownShort[1]) % 13 + 1 : nz(cdownShort[1]) % 13
cdownLong := lastCompletedSetup != LONG or cancelCountdown ? 0 : 
   close <= low[2] ? nz(cdownLong[1]) % 13 + 1 : nz(cdownLong[1]) % 13

cdownCount := max(cdownShort, cdownLong)
cdownColour := cdownShort > 0 ? shortColour : longColour

perfect8 := cdownCount < 8 ? na : cdownCount == 8 ? close : perfect8[1]
perfectCountdown := showPerfect and 
   (cdownShort == 13 and high >= perfect8 or cdownLong and low <= perfect8)

plotchar(showTDSeq and not perfectCountdown and showCountdown and cdownCount == 13 and cdownCount[1] == 12, title="Countdown 13", char="", text="13",location=invert ? location.abovebar : location.belowbar, textcolor=cdownColour, transp=0, editable=false)
plotchar(showTDSeq and perfectCountdown and showCountdown and cdownCount == 13 and cdownCount[1] == 12, title="Perfect Countdown 13", char="â“­", location=invert ? location.abovebar : location.belowbar, color=cdownColour, transp=0, editable=false)

tdstSupport = float(na)
tdstResistance = float(na)
tdRisk = float(na)
riskbar = int(na)

highest_2 = highest(9)
tdstResistance := not showTDSeq or not showTDST ? na : setupLong == 9 ? highest_2 : close > tdstResistance[1] ? na : tdstResistance[1]
lowest_2 = lowest(9)
tdstSupport := not showTDSeq or not showTDST ? na : setupShort == 9 ? lowest_2 : close < tdstSupport[1] ? na : tdstSupport[1]

plot(tdstResistance, title="TDST Resistance", color=longColour, style=plot.style_circles, linewidth=1, editable=false)
plot(tdstSupport, title="TDST Support", color=shortColour, style=plot.style_circles, linewidth=1, editable=false)

if not showTDSeq or not showRisk
    tdRisk := na
    tdRisk
else
    if setupLong == 9
        riskbar := -1 * lowestbars(9)[0]
        tdRisk := low[riskbar] - tr[riskbar]
        tdRisk
    else
        if setupShort == 9
            riskbar = -1 * highestbars(9)[0]
            tdRisk := high[riskbar] + tr[riskbar]
            tdRisk
        else
            tdRisk := min(open, close) < tdRisk[1] and max(open, close) > tdRisk[1] ? na : tdRisk[1]
            tdRisk

plot(tdRisk, title="TD Risk", color=color.blue, style=plot.style_circles, linewidth=1, editable=false)

//################### Trend Trade System #####################

show_tts = input(true, title="Show Trend Trade System") 

tts_ema_length = input(26, title="Trend Trade System EMA Length") 
tts_ema_val = matype(low, tts_ema_length, 2, "")

tts_vwap_length = input(13, title="Trend Trade System VWAP Length")
tts_vwap_val = matype(vwap, tts_vwap_length, 2, "")

tts_rsi_len = input(14, minval=1, title="Trend Trade System RSI Length")
tts_up = rma(max(change(src), 0), tts_rsi_len)
tts_down = rma(-min(change(src), 0), tts_rsi_len)
tts_rsi = (tts_down == 0) ? 100 : tts_up == 0 ? 0 : 100 - (100 / (1 + tts_up / tts_down))

tts_enable_bar_colors = input(false, title="Enable bar colors") 

plot(show_tts ? tts_vwap_val : na, color= color.gray, style=plot.style_line, title="Trend Trade System VWAP Line")
plot(show_tts ? tts_ema_val : na, color=color.orange, style=plot.style_line, title="Trend Trade System EMA Line", display = display.none)

cond1 = tts_rsi > 55 and close > tts_ema_val ? 1 : 0
barcolor(show_tts and tts_enable_bar_colors and cond1 ? color.green : na, editable=false) 

cond2 = tts_rsi < 45 and close < tts_ema_val ? 1 : 0
barcolor(show_tts and tts_enable_bar_colors and cond2 ? color.red : na, editable=false) 

cond3 = tts_rsi < 50 and close < tts_ema_val ? 1 : 0
barcolor(show_tts and tts_enable_bar_colors and cond3 ? color.orange : na, editable=false)

cond4 = tts_rsi > 50 and close > tts_ema_val ? 1 : 0
barcolor(show_tts and tts_enable_bar_colors and cond4 ? color.teal : na, editable=false)

cond5 = (tts_rsi < 50 and close > tts_ema_val) or (tts_rsi > 50 and close < tts_ema_val)? 1 : 0
barcolor(show_tts and tts_enable_bar_colors and cond5 ? color.white : na, editable=false)

//plot chars
cond7 = tts_rsi > 50 and close < tts_vwap_val and close > tts_ema_val ? 1 : 0
plotchar(show_tts and tts_enable_bar_colors and not showTDSeq and cond7, char='B',color=color.lime, transp=0, location=location.abovebar, editable=false)

cond8 = tts_rsi < 50 and close > tts_vwap_val and close < tts_ema_val ? 1 : 0
plotchar(show_tts and tts_enable_bar_colors and not showTDSeq and cond8, char='S', color=color.red, transp=0, location=location.abovebar, editable=false)

cond9 = tts_rsi > 50 and close < tts_vwap_val and close > tts_ema_val ? 1 : 0
plotshape(show_tts and tts_enable_bar_colors and not showTDSeq and cond9, style=shape.triangleup, color=color.lime, transp=0, location=location.belowbar, editable=false)

cond10 = tts_rsi < 50 and close > tts_vwap_val and close < tts_ema_val ? 1 : 0
plotshape(show_tts and tts_enable_bar_colors and not showTDSeq and cond10, style=shape.triangledown, color=color.red, transp=0, location=location.belowbar, editable=false)

cond11 = tts_rsi > 75 and close > tts_ema_val ? 1 : 0
plotchar(show_tts and tts_enable_bar_colors and not showTDSeq and cond11, char='T', color=color.blue, transp=0, location=location.abovebar, editable=false)

cond12 = tts_rsi < 25 and close < tts_ema_val ? 1 : 0
plotchar(show_tts and tts_enable_bar_colors and not showTDSeq and cond12, char='T', color=color.blue, transp=0, location=location.abovebar, editable=false)
//###############################Support/Resistance Envelope##################

showSRChannel = input(false, title="Show Support Resistance Channel")

srlength  = input(defval = 25, title = "Envelope Length", minval = 1, maxval = 1000)
sigma   = input(defval = 1.0, title = "Sigma Multiply", minval = 0.01, step = 0.1)

upperEnvelope   = highest(high, srlength)
lowerEnvelope   = lowest(low, srlength)
envelopeSigma   = ((upperEnvelope - lowerEnvelope) / 8) * sigma
envelopeMedian  = (upperEnvelope + lowerEnvelope) / 2
upperSigma    =  envelopeMedian + envelopeSigma
lowerSigma    = envelopeMedian - envelopeSigma


plot(showSRChannel ? upperEnvelope : na, title = "Upper Envelope", color = #66FFFF, linewidth = 1, display=display.none)
plot(showSRChannel ? upperSigma : na, title = "Upper Sigma", color = #66FFFF, linewidth = 1, style = plot.style_line)
plot(showSRChannel ? envelopeMedian : na, title = "Median", color = color.silver, linewidth = 1, style = plot.style_circles)
plot(showSRChannel ? lowerSigma : na, title = "Lower Sigma", color = #FF1133, linewidth = 1, style = plot.style_line)
plot(showSRChannel ? lowerEnvelope : na, title = "Lower Envelope", color = #FF1133, linewidth = 1, display=display.none)