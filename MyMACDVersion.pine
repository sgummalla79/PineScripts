//@version=4
study(title="MACD", shorttitle="MACD", resolution="")
// Getting inputs
fast_length = input(title="Fast Length", type=input.integer, defval=12)
slow_length = input(title="Slow Length", type=input.integer, defval=26)
src = input(title="Source", type=input.source, defval=close)
signal_length = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9)
sma_source = input(title="Simple MA(Oscillator)", type=input.bool, defval=false)
sma_signal = input(title="Simple MA(Signal Line)", type=input.bool, defval=false)
invert = input(title="Invert Scale", type=input.bool, defval=false)
// Plot colors
col_grow_above = invert ? #EF5350 : #26A69A//#26A69A
col_grow_below = invert ? #B2DFDB : #FFCDD2//#FFCDD2
col_fall_above = invert ? #FFCDD2 : #B2DFDB//#B2DFDB
col_fall_below = invert ? #26A69A : #EF5350//#EF5350
col_macd = invert ? color.yellow : color.green
col_signal = invert ? color.blue : color.red
// Calculating
fast_ma = sma_source ? sma(src, fast_length) : ema(src, fast_length)
slow_ma = sma_source ? sma(src, slow_length) : ema(src, slow_length)
macd = fast_ma - slow_ma
my_macd = invert ? -macd : macd

signal = sma_signal ? sma(macd, signal_length) : ema(macd, signal_length)
my_signal = invert ? -signal : signal

hist = my_macd - my_signal

hline(0, linestyle=hline.style_solid)
plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below) ), transp=0 )
plot(my_macd, title="MACD", color=col_macd, transp=0)
plot(my_signal, title="Signal", color=col_signal, transp=0)