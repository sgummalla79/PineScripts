// ***********************************************************
// TD Sequential Setup and Countdown.
// (c) Andrew Hitchman, 2017, 2018, 2019. All rights reserved.
// ***********************************************************
// An implementation of Tom DeMark's (https://en.wikipedia.org/wiki/Thomas_DeMark) Sequential Setup and Countdown indication.
// Based on the rules described at https://oxfordstrat.com/indicators/td-sequential-3/
// 
// Features:
// ==========
// Setup counts long/short      |  Encircled number above bar               |  Close exceeds the close 4 bars earlier in the direction of the setup.        |
//                                                                          |  Setup must be contiguous. It resets if a close fails the test.               |
//
// 'Perfect' setups             |  Filled encircled 8 or 9 setup above bar  |  The high exceeds the high 2 bars earlier in the direction of the setup       |
//
// Countdown long/short         |  Encircled number below bar               |  On and after a complete (9) setup, increment count for each close:           |
//                                                                          |    -- above the high of two bars earlier (rising short countdown).            |
//                                                                          |    -- below the low of two bars earlier (falling long countdown).             |
//                                                                          |  Is not contiguous, but resets if a new reversing setup completes, or         |
//                                                                          |  if the high or low exceeds the extreme high or low of the triggering setup.  |
//                                                                          |  The setup exteme high/low recycles based on the fib rules desccribed.        |
//
// 'Perfect' countdown          |  Filled encircled 13 countdown below bar  |  When the 13th high or low exceeds the close of countdown bar 8               |
//
// Colour                       |  Green for rising setups/countdowns       |  Reversible in configuration.                                                 |
//                              |  Red for falling setups/countdowns        |                                                                               |
//
// Variations from the rules: Does not implement the 'true high/low' rules. Uses simple high/lows.
// Introduces 'perfection', and used this rather than defering the countdown 13.
// 
//
// How to trade:
// ==============
//
// Works more reliably on longer timeframes, but is functional on any timeframe. 
// A '9' (or perfect '8') signals a potential reversal. Use with price action and candestick patterns and other trends & indicators for support analysis.
// A '13' countdown is a stronger reversal indicator, with the same caveats as above.
// A '13' on or near a '9' setup is an extremely strong signal.
// '9' setups or '13' countdowns across multiple timeframes are the best possible signal. e.g. a monthly 9, a weekly 9, a daily 9.
//
// Tips:
// ======
// If you make money using this indicator, then please show your appreciation by sending a donation to:
// BTC:  1Gy4fZLSTw7WFszFspJzhkbwCsdJqgRq1a
// ETH:  0xaadd9e54031fc7a58c35bb79bd4a0ba50a32f94a
// Dash:  XimNeFbU41ZAHTtraDeZaWQoX4Jdm5az6Z
//
// Bug Reports / Issues:
// ======================
// Please report bugs, isssues or suggest improvements by PM on Trading View https://www.tradingview.com/u/andyhitchman/
//
//
// Change History:
// ================
// 1.0      Initial development and first publication
// 2.0      Fix bug where countdown completion and setup completion on the same bar would prevent new countdown starting
// 3.0      Change countdown to start on the bar that completes setup. Thanks to TV user @hnsbhat
// 4.0      TD Setup Trend Support and Resistance
// 5.0      Fixed bug in TDST and countdown recycling. Thanks @cmos.
// 6.0      Option to recycle setup on next bar.
// 7.0      Fix regression to restore countdown to start on the bar that completes setup. Thanks to @fernandofurtado
// 8.0      TD Price Flip defaulting to on, gives cleaner setups after price pivots. Minor bug spotted by @fernandofurtado fixed.
// 9.0      TD Risk lines show the potential risk in a trade and a possible stop price. Another bug spotted by @fernandofurtado fixed.
// 10.0     Stricter definition of perfected setups and use of true range for TD Risk all suggested by @fernandofurtado.
// 11.0     Experimental feature: volatility smoothing; considers close[5] in addition to close[4] in setups. Numbers show in black.
// 12.0     Fix breaking changes to underlying engine by adding max_bars_back=900 to study

//@version=3
study("TD Setup and Countdown", "TD Seq", overlay=true, max_bars_back=900)

showSetup = input(true, "Show setup")
showCountdown = input(true, "Show countdown")
showPerfect = input(true, "Show perfect counts")
invertColours = input(false, "Invert colours")
showOnlyCompletion = input(false, "Only show completions")
showTDST = input(true, "Show TDST Support and Resistance")
setupRecyclesOnNextBar = input(false, "Setup recycles on next bar")
flip = input(true, "Setup commences after TD Price Flip")
showRisk = input(true, "Show risk line")
volatilitySmoothing = input(false, "Volatility smoothing (relaxed setup)")

shortColour = invertColours ? red : green
longColour = invertColours ? green : red
smoothedColour = black

setupShort = na, setupLong = na, setupCount = na, setupColour = na, perfectSetup = na

setupShort := if (close < close[4] and (not(volatilitySmoothing) or close < close[5]))
    0
else 
    if (flip)
        if (nz(setupShort[1]) == 0 and close[1] < close[5] and close > close[4])
            1
        else
            if (nz(setupShort[1]) == 0)
                0
            else
                nz(setupShort[1] + 1)
    else 
        if (setupShort[1] == 9)
            setupRecyclesOnNextBar ? 1 : 0
        else
            nz(setupShort[1] + 1)
        
setupLong := if (close > close[4] and (not(volatilitySmoothing) or close > close[5]))
    0
else 
    if (flip)
        if (nz(setupLong[1]) == 0 and close[1] > close[5] and close < close[4])
            1
        else
            if (nz(setupLong[1]) == 0)
                0
            else
                nz(setupLong[1] + 1)
    else 
        if (setupLong[1] == 9)
            setupRecyclesOnNextBar ? 1 : 0
        else
            nz(setupLong[1] + 1)

setupCount := max(setupShort, setupLong)
setupColour := setupShort > 0 ? setupLong > 0 ? smoothedColour : shortColour : longColour

perfectSetup := showPerfect and ((setupShort == 8 and (high >= high[1] and high >= high[2])) or (setupShort == 9 and (high >= high[2] and high >= high[3])) or (setupLong == 8 and (low <= low[1] and low <= low[2])) or (setupLong == 9 and (low <= low[2] and low <= low[3])))


plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 1, title="Setup 1", char="①", color=setupColour, transp=0)
plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 2, title="Setup 2", char="②", color=setupColour, transp=0)
plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 3, title="Setup 3", char="③", color=setupColour, transp=0)
plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 4, title="Setup 4", char="④", color=setupColour, transp=0)
plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 5, title="Setup 5", char="⑤", color=setupColour, transp=0)
plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 6, title="Setup 6", char="⑥", color=setupColour, transp=0)
plotchar(showSetup and (not(showOnlyCompletion) or barstate.islast) and setupCount == 7, title="Setup 7", char="⑦", color=setupColour, transp=0)
plotchar(not(perfectSetup) and (not(showOnlyCompletion) or barstate.islast) and showSetup and setupCount == 8, title="Setup 8", char="⑧", color=setupColour, transp=0)
plotchar(not(perfectSetup) and showSetup and setupCount == 9, title="Setup 9", char="⓽", color=setupColour, transp=0)

plotchar(perfectSetup and showSetup and setupCount == 8, title="Perfect setup 8", char="➑", color=setupColour, transp=0)
plotchar(perfectSetup and showSetup and setupCount == 9, title="Perfect setup 9", char="➒", color=setupColour, transp=0)


cdownShort = na, cdownLong = na, cdownColour = na, cdownCount = na, perfect8 = na, perfectCountdown = na
lastCompletedSetup = na, setupHigh = na, setupLow = na, cancelCountdown = na, recycleCountdown = na
LONG = -1, SHORT = 1, CANCELLED = 0

recycleCountdown := if (setupShort == 9 and lastCompletedSetup[1] == SHORT) or (setupLong == 9 and lastCompletedSetup[1] == LONG)
    (highest(9) - lowest(9)) >= (setupHigh[1] - setupLow[1]) and (setupHigh[1] - setupLow[1]) * 1.618 > (highest(9) - lowest(9))

setupHigh := recycleCountdown or (setupShort == 9 and lastCompletedSetup[1] != SHORT) or (setupLong == 9 and lastCompletedSetup[1] != LONG) ? highest(9) : setupHigh[1]
setupLow := recycleCountdown or (setupShort == 9 and lastCompletedSetup[1] != SHORT) or (setupLong == 9 and lastCompletedSetup[1] != LONG) ? lowest(9) : setupLow[1]

cancelCountdown := (lastCompletedSetup[1] == SHORT and high < setupLow) or 
                   (lastCompletedSetup[1] == LONG and low > setupHigh) or
                   recycleCountdown
                   
lastCompletedSetup := setupLong == 9 ? LONG : (setupShort == 9 ? SHORT : (((cdownShort[1] == 13 and setupShort[1] != 9) or (cdownLong[1] == 13 and setupLong[1] != 9) or cancelCountdown) ? CANCELLED : lastCompletedSetup[1]))

cdownShort := (lastCompletedSetup != SHORT or cancelCountdown) ? 0 : (close >= high[2] ? (nz(cdownShort[1]) % 13) + 1 : nz(cdownShort[1]) % 13)
cdownLong := (lastCompletedSetup != LONG or cancelCountdown) ? 0 : (close <= low[2] ? (nz(cdownLong[1]) % 13) + 1 : nz(cdownLong[1]) % 13)

cdownCount := max(cdownShort, cdownLong)
cdownColour := cdownShort > 0 ? shortColour : longColour

perfect8 := cdownCount < 8 ? na : cdownCount == 8 ? close : perfect8[1]
perfectCountdown := showPerfect and ((cdownShort == 13 and high >= perfect8) or (cdownLong and low <= perfect8))

plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 1 and cdownCount[1] != 1, title="Countdown 1", char="①", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 2 and cdownCount[1] == 1, title="Countdown 2", char="②", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 3 and cdownCount[1] == 2, title="Countdown 3", char="③", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 4 and cdownCount[1] == 3, title="Countdown 4", char="④", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 5 and cdownCount[1] == 4, title="Countdown 5", char="⑤", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 6 and cdownCount[1] == 5, title="Countdown 6", char="⑥", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 7 and cdownCount[1] == 6, title="Countdown 7", char="⑦", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 8 and cdownCount[1] == 7, title="Countdown 8", char="⑧", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 9 and cdownCount[1] == 8, title="Countdown 9", char="⑨", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 10 and cdownCount[1] == 9, title="Countdown 10", char="⑩", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 11 and cdownCount[1] == 10, title="Countdown 11", char="⑪", location=location.belowbar, color=cdownColour, transp=0)
plotchar(showCountdown and (not(showOnlyCompletion) or barstate.islast) and cdownCount == 12 and cdownCount[1] == 11, title="Countdown 12", char="⑫", location=location.belowbar, color=cdownColour, transp=0)
plotchar(not(perfectCountdown) and showCountdown and cdownCount == 13 and cdownCount[1] == 12, title="Countdown 13", char="⑬", location=location.belowbar, color=cdownColour, transp=0)
plotchar(perfectCountdown and showCountdown and cdownCount == 13 and cdownCount[1] == 12, title="Perfect Countdown 13", char="⓭", location=location.belowbar, color=cdownColour, transp=0)

plotshape(showCountdown and cancelCountdown, title="Countdown broke setup support/resistance", location=location.belowbar, style=shape.xcross, color=cdownColour, transp=0)

tdstSupport = na, tdstResistance = na, tdRisk = na, riskbar = na

tdstResistance := not(showTDST) ? na : (setupLong == 9 ? highest(9) : (close > tdstResistance[1] ? na : tdstResistance[1]))
tdstSupport := not(showTDST) ? na : (setupShort == 9 ? lowest(9) : (close < tdstSupport[1] ? na : tdstSupport[1]))

alertcondition(close > tdstResistance[1] or close < tdstSupport[1], title="Close outside TDST range", message="Close outside TDST range")

plot(tdstResistance, title="TDST Resistance", color=longColour, style=linebr)
plot(tdstSupport, title="TDST Support", color=shortColour, style=linebr)

if (not(showRisk))
    tdRisk := na 
else
    if (setupLong == 9)
        riskbar := -1 * lowestbars(9)[0]
        tdRisk := low[riskbar] - tr[riskbar]
    else
        if (setupShort == 9)
            riskbar = -1 * highestbars(9)[0]
            tdRisk := high[riskbar] + tr[riskbar]
        else 
            tdRisk := min(open, close) < tdRisk[1] and max(open, close) > tdRisk[1] ? na : tdRisk[1]

plot(tdRisk, title="TD Risk", color=black, style=cross, linewidth=1)